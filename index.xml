<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Science and Engineering</title>
    <link>//blog.honir.net/</link>
    <description>Recent content on Data Science and Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Jul 2017 11:47:35 +0000</lastBuildDate>
    
	<atom:link href="//blog.honir.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How Ai Fits Into Your Data Science Team</title>
      <link>//blog.honir.net/articles/2017-07-28-how-ai-fits-into-your-data-science-team/</link>
      <pubDate>Fri, 28 Jul 2017 11:47:35 +0000</pubDate>
      
      <guid>//blog.honir.net/articles/2017-07-28-how-ai-fits-into-your-data-science-team/</guid>
      <description>I read an interesting article this morning from an interview with Hilary Mason on Harvard Business Review about How AI fits into your data science team.
There are a few sections I wanted to capture and expand upon, as I think analytics / data science / machine learning will all see an increase in adoption from business over the coming years, and am very interested in how this might play out.</description>
    </item>
    
    <item>
      <title>Ideas for Machine Learning Projects</title>
      <link>//blog.honir.net/posts/2017-07-18-ideas-for-machine-learning-projects/</link>
      <pubDate>Tue, 18 Jul 2017 18:41:43 +0000</pubDate>
      
      <guid>//blog.honir.net/posts/2017-07-18-ideas-for-machine-learning-projects/</guid>
      <description>There are so many open data sets out there, this is a great time to be interested in data science.
As I talked about in my earlier post about Building a data science learning plan, over the next six months I plan on working through a number of personal projects as a vehicle to apply my learnings in data science. Having a physical output as well is useful as a way of showing progress which will motivate me even more, and learning by doing has always worked well for me to pick up new knowledge.</description>
    </item>
    
    <item>
      <title>Building a Data Science Learning Plan</title>
      <link>//blog.honir.net/posts/2017-07-18-building-a-data-science-learning-plan/</link>
      <pubDate>Tue, 18 Jul 2017 10:31:43 +0000</pubDate>
      
      <guid>//blog.honir.net/posts/2017-07-18-building-a-data-science-learning-plan/</guid>
      <description>Recently I got some disappointing news that my employers are only looking to hire experienced Data Scientists, and not internally develop staff.
The positive side to this however is it has spurred me on to build a loose study framework for the next six months, which using feedback from my peers is going to diverge slightly how I was approaching building knowledge.
Previously on&amp;hellip; Until recently I focused on learning techniques such as cleaning your data, feature engineering, and creating a starting list of algorithms to build upon in a problem space.</description>
    </item>
    
    <item>
      <title>More Information</title>
      <link>//blog.honir.net/about/</link>
      <pubDate>Tue, 18 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>//blog.honir.net/about/</guid>
      <description>I started this personal blog as a method of learning, by writing up my study notes it helps me retain the information better.
Once I started my journey from Engineering into Data Science I kept getting asked to recommend articles that I had read, or could I explain how a particular concept worked, so it seemed it could be useful to open my notes up in case they can help others.</description>
    </item>
    
    <item>
      <title>Structuring Your Data Science And Engineering Teams</title>
      <link>//blog.honir.net/articles/2017-07-17-structuring-your-data-science-and-engineering-teams/</link>
      <pubDate>Mon, 17 Jul 2017 10:42:38 +0000</pubDate>
      
      <guid>//blog.honir.net/articles/2017-07-17-structuring-your-data-science-and-engineering-teams/</guid>
      <description>Rachel Thomas wrote a really good summary piece about structuring your Data Science and Engineering teams that I think a lot of people will recognise aspects of in their organisations. Certainly in my current role we are facing many of the challenges and opportunities of how to organise Data Science within the company.
The majority of the scenarios she covered I have seen multiple times, which I have paraphrased below with her thoughts.</description>
    </item>
    
    <item>
      <title>Visualising Classification Performance with ROC and AUC</title>
      <link>//blog.honir.net/posts/2017-04-26-area-under-curve/</link>
      <pubDate>Wed, 26 Apr 2017 21:53:56 +0000</pubDate>
      
      <guid>//blog.honir.net/posts/2017-04-26-area-under-curve/</guid>
      <description>The Receiving Operating Characteristic, or ROC, is a way to visualise the performance of a binary classifier (0/1).
It compares the rate at which your classifier is making correct predictions (True Positives or TP) and the rate at which your classifier is making false alarms (False Positives or FP).
When evaluating a new model performance, accuracy can be very sensitive to unbalanced class proportions. The ROC curve is insensitive to this lack of balance in the data set.</description>
    </item>
    
    <item>
      <title>Quick Introduction to Python 3 Classes</title>
      <link>//blog.honir.net/articles/2015-02-17-quick-introduction-to-python-3-classes/</link>
      <pubDate>Tue, 17 Feb 2015 16:05:43 +0000</pubDate>
      
      <guid>//blog.honir.net/articles/2015-02-17-quick-introduction-to-python-3-classes/</guid>
      <description>If you are looking for a good introduction to Python 3 Classes then the Python Classes Strike Again post by Leonardo Giordani is very good.
class Door: colour = &#39;brown&#39; def __init__(self, number, status): self.number = number self.status = status @classmethod def knock(cls): print(&amp;quot;Knock!&amp;quot;) @classmethod def paint(cls, colour): cls.colour = colour def open(self): self.status = &#39;open&#39; def close(self): self.status = &#39;closed&#39;   The paint() class method now changes the class attribute colour which is shared amongst instances.</description>
    </item>
    
  </channel>
</rss>